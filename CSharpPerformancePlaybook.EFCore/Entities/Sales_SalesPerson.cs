// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace CSharpPerformancePlaybook.EFCore
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // SalesPerson
    /// <summary>
    /// Sales representative current information.
    /// </summary>
    public class Sales_SalesPerson
    {
        /// <summary>
        /// Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID
        /// </summary>
        public int BusinessEntityId { get; set; } // BusinessEntityID (Primary key)

        /// <summary>
        /// Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.
        /// </summary>
        public int? TerritoryId { get; set; } // TerritoryID

        /// <summary>
        /// Projected yearly sales.
        /// </summary>
        public decimal? SalesQuota { get; set; } // SalesQuota

        /// <summary>
        /// Bonus due if quota is met.
        /// </summary>
        public decimal Bonus { get; set; } // Bonus

        /// <summary>
        /// Commision percent received per sale.
        /// </summary>
        public decimal CommissionPct { get; set; } // CommissionPct

        /// <summary>
        /// Sales total year to date.
        /// </summary>
        public decimal SalesYtd { get; set; } // SalesYTD

        /// <summary>
        /// Sales total of previous year.
        /// </summary>
        public decimal SalesLastYear { get; set; } // SalesLastYear

        /// <summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        /// </summary>
        public Guid Rowguid { get; set; } // rowguid

        /// <summary>
        /// Date and time the record was last updated.
        /// </summary>
        public DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Sales_SalesPersonQuotaHistories where [SalesPersonQuotaHistory].[BusinessEntityID] point to this entity (FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID)
        /// </summary>
        public virtual ICollection<Sales_SalesPersonQuotaHistory> Sales_SalesPersonQuotaHistories { get; set; } // SalesPersonQuotaHistory.FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID

        /// <summary>
        /// Child Sales_SalesTerritoryHistories where [SalesTerritoryHistory].[BusinessEntityID] point to this entity (FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID)
        /// </summary>
        public virtual ICollection<Sales_SalesTerritoryHistory> Sales_SalesTerritoryHistories { get; set; } // SalesTerritoryHistory.FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID

        /// <summary>
        /// Child Sales_Stores where [Store].[SalesPersonID] point to this entity (FK_Store_SalesPerson_SalesPersonID)
        /// </summary>
        public virtual ICollection<Sales_Store> Sales_Stores { get; set; } // Store.FK_Store_SalesPerson_SalesPersonID

        // Foreign keys

        /// <summary>
        /// Parent Sales_SalesTerritory pointed by [SalesPerson].([TerritoryId]) (FK_SalesPerson_SalesTerritory_TerritoryID)
        /// </summary>
        public virtual Sales_SalesTerritory Sales_SalesTerritory { get; set; } // FK_SalesPerson_SalesTerritory_TerritoryID

        public Sales_SalesPerson()
        {
            Bonus = 0.00m;
            CommissionPct = 0.00m;
            SalesYtd = 0.00m;
            SalesLastYear = 0.00m;
            Rowguid = Guid.NewGuid();
            ModifiedDate = DateTime.Now;
            Sales_SalesPersonQuotaHistories = new List<Sales_SalesPersonQuotaHistory>();
            Sales_SalesTerritoryHistories = new List<Sales_SalesTerritoryHistory>();
            Sales_Stores = new List<Sales_Store>();
        }
    }

}
// </auto-generated>
