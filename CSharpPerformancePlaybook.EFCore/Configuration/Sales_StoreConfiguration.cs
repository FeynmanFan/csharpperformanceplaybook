// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace CSharpPerformancePlaybook.EFCore
{
    // Store
    public class Sales_StoreConfiguration : IEntityTypeConfiguration<Sales_Store>
    {
        public void Configure(EntityTypeBuilder<Sales_Store> builder)
        {
            builder.ToTable("Store", "Sales");
            builder.HasKey(x => x.BusinessEntityId).HasName("PK_Store_BusinessEntityID").IsClustered();

            builder.Property(x => x.BusinessEntityId).HasColumnName(@"BusinessEntityID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.SalesPersonId).HasColumnName(@"SalesPersonID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Demographics).HasColumnName(@"Demographics").HasColumnType("xml").IsRequired(false);
            builder.Property(x => x.Rowguid).HasColumnName(@"rowguid").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Sales_SalesPerson).WithMany(b => b.Sales_Stores).HasForeignKey(c => c.SalesPersonId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Store_SalesPerson_SalesPersonID");

            builder.HasIndex(x => x.Rowguid).HasDatabaseName("AK_Store_rowguid").IsUnique();
            builder.HasIndex(x => x.SalesPersonId).HasDatabaseName("IX_Store_SalesPersonID");
        }
    }

}
// </auto-generated>
